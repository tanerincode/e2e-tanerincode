# Production environment values for e2e-profile
replicaCount: 3

image:
  repository: e2e-profile
  tag: stable
  pullPolicy: Always

service:
  type: ClusterIP
  port: 8081

# Production Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: profile.e2e-app.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: e2e-profile-tls
      hosts:
        - profile.e2e-app.example.com

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Application configuration for production environment
config:
  APP_ENV: production
  MOCK_DB: "false"
  LOG_LEVEL: info
  PORT: 8081
  AUTH_SERVICE_URL: "http://e2e-app:8080"
  AUTH_GRPC_ADDR: "e2e-app:50051"

# Database configuration for production
database:
  existingSecret: ""

# Enable PostgreSQL dependency for production with increased resources
postgresql:
  enabled: true
  auth:
    username: prod_user
    password: "" # This should be set securely, e.g. via CI/CD variables
    database: e2e_profile
  primary:
    persistence:
      size: 10Gi
      storageClass: "standard"
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# Production specific autoscaling settings
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80